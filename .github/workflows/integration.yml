---
name: Integration tests
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      ansible_versions:
        required: true
        type: string
      python_versions:
        required: true
        type: string
      matrix_exclude:
        required: true
        type: string

jobs:
  integration:
    strategy:
      fail-fast: false
      matrix:
        test-target:
          - kubevirt_vm
          - kubevirt_vm_info
          - kubevirt_vmi_info
          - inventory_kubevirt
        ansible-version: ${{ fromJSON(inputs.ansible_versions) }}
        python-version: ${{ fromJSON(inputs.python_versions) }}
        exclude: ${{ fromJSON(inputs.matrix_exclude) }}
    runs-on: ubuntu-latest
    name: ${{ matrix.ansible-version }}, py${{ matrix.python-version }}, ${{ matrix.test-target }}
    env:
      collection_dir: ansible_collections/redhat/openshift_virtualization
      work_dir: /home/runner/.ansible/collections
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: collection-tarball

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible-core ${{ matrix.ansible-version }}
        run: |
          pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Install collections
        run: |
          ansible-galaxy collection install -p ${{ env.work_dir }} redhat-openshift_virtualization-*.tar.gz
          # Install ansible.posix to have the ansible.posix.profile_task callback available
          ansible-galaxy collection install -p ${{ env.work_dir }} --force-with-deps ansible.posix

      - name: Install collection python requirements
        working-directory: ${{ env.work_dir }}/${{ env.collection_dir }}
        run: |
          pip install -r requirements.txt

      - name: Install kind / kubectl
        uses: helm/kind-action@v1.12.0
        with:
          install_only: true

      - name: Deploy KubeVirt
        run: |
          wget https://raw.githubusercontent.com/kubevirt/kubevirt.core/${{ github.ref_name}}/hack/e2e-setup.sh
          chmod +x e2e-setup.sh
          ./e2e-setup.sh \
            -v \
            --configure-inotify-limits \
            --configure-secondary-network \
            --deploy-kubevirt \
            --deploy-kubevirt-cdi \
            --deploy-kubevirt-common-instancetypes \
            --deploy-cnao \
            --create-cluster \
            --create-nad
        env:
          KIND: kind
          KUBECTL: kubectl

      - name: Run integration tests
        working-directory: ${{ env.work_dir }}/${{ env.collection_dir }}
        run: |
          ansible-test integration --requirements --python ${{ matrix.python-version }} ${{ matrix.test-target }}
